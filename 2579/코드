//dp문제를 풀며 어려웠다고 느낌 -> 조건을 나누는 방식을 너무 어렵게 생각하여 if문을 줄이려고 하였으나 추후 코드 이해를 위해서라도 if는 모든 조건식을 나열 해주어야 함을 알게됨(아무리 존재할 수 없는 경우라도)<-그래야 이해가 쉬워짐!!
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.LinkedList;
import java.util.Queue;

public class Main {
    public static BufferedReader rdin = new BufferedReader( new InputStreamReader(System.in));
    public static BufferedWriter rdout = new BufferedWriter( new OutputStreamWriter(System.out));

    public static void main(String[] args) throws IOException {
        int N = Integer.parseInt(rdin.readLine());
        int[] dataArr = new int[N+1];
        dataArr[0]=0;
        for (int i = 1; i <= N; i++) {
            dataArr[i] = Integer.parseInt(rdin.readLine());
        }
        int[] dp = new int[N+1];
        boolean canup=true;
        dp[0]=0;
        dp[1]=dataArr[1];
        if(N>=2){dp[2]=dp[1]+dataArr[2];}
        canup=false;
        for (int i = 3; i <= N; i++) {
            if(dp[i-1]>=dp[i-2]&canup){dp[i]=dp[i-1]+dataArr[i];canup=false;}
            else if(dp[i-1]<dp[i-2]&canup){dp[i]=dp[i-2]+dataArr[i];canup=true;}
            else if(dp[i-3]+dataArr[i-1]>=dp[i-2]&canup==false){dp[i]=dp[i-3]+dataArr[i-1]+dataArr[i];canup=false;}
            else if(dp[i-3]+dataArr[i-1]<dp[i-2]&canup==false){dp[i]=dp[i-2]+dataArr[i];canup=true;}
        }
        rdout.write(Integer.toString(dp[N]));
        rdout.close();    

    }
}
